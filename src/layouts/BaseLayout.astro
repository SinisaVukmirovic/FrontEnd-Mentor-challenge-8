---
import { ViewTransitions } from 'astro:transitions';

import "../styles/global.css";

import Footer from "../components/Footer.astro";

export interface Props {
	title?: string;
}

const { title = "Manage Landing Page" } = Astro.props as Props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="./favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;700&display=swap" rel="stylesheet" />
	</head>
	<body>
		<div class="theme-wrapper light">

			<slot />

			<Footer />

			<div class="theme-toggle">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: #f25f3a;transform: ;msFilter:;"><path d="M19.071 19.071c3.833-3.833 3.833-10.31 0-14.143s-10.31-3.833-14.143 0-3.833 10.31 0 14.143 10.31 3.833 14.143 0zM7.051 7.051c2.706-2.707 7.191-2.708 9.898 0l-9.898 9.898c-2.708-2.707-2.71-7.19 0-9.898z"></path></svg>
			</div>
		</div>
	</body>
</html>

<style>
	.light {
		background-color: var(--Very-Light-Gray);
	}

	.dark {
		background-color: var(--Dark-Blue);
	}

	.theme-toggle {
		width: 3rem;
		height: 3rem;
		border-radius: 0 0 0 100%;
		position: absolute;
		top: 0;
		right: 0;
		background-color: var(--Dark-Blue);
		display: grid;
		place-items: center;

		& svg {
			margin-left: .5rem;
			margin-bottom: .5rem;
		}
	}

	.copy {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 100;
		animation: appear 1.5s ease-in 1 both;
	}

	@keyframes appear {
		0% {
			clip-path: circle(1% at 100% 0%);
		}
		100% {
			clip-path: circle(150% at 100% 0%);
		}
	}

	.theme-toggle.change-bg {
		background: var(--Very-Light-Gray);
	}
</style>

<script>
	import toggleMenu from '../modules/toggleMenu.js';
	
	let themeToggleBtn;
	let menuBtn;
	let themeWrapper;

	let logo;
	let h1;

	function getDomElems() {
		themeToggleBtn = document.querySelector(".theme-toggle");
		menuBtn = document.querySelector(".menu-btn");
		themeWrapper = document.querySelector(".theme-wrapper");

		logo = document.querySelector('.logo a img');
		h1 = document.querySelector('h1');
	}

	let body = document.querySelector("body");

	getDomElems();

	let darkTheme = false;

	function themeToggleAnimation() {
		themeToggleBtn.classList.toggle('change-bg');
		changeThemeIcon();
		logo.classList.toggle('invert-logo');
		h1.classList.toggle('change-clr');
		
		// Clone the wrapper
		darkTheme = !darkTheme;
		let clone = themeWrapper.cloneNode(true);
		if (darkTheme) {
			clone.classList.remove("light");
			clone.classList.add("dark");
		} else {
			clone.classList.remove("dark");
			clone.classList.add("light");
		}

		clone.classList.add("copy");
		body.appendChild(clone);

		// body.style.overflow = "hidden";

		clone.addEventListener("animationend", () => {
			// body.style.overflow = "scroll";

			themeWrapper.remove();
			clone.classList.remove("copy");

			getDomElems();
			events();
		});
	}

	function events() {
		themeToggleBtn.addEventListener("click", themeToggleAnimation);
		menuBtn.addEventListener('click', toggleMenu);   
	}

	events();

	function changeThemeIcon() {
		themeToggleBtn.querySelector
	}
</script>
